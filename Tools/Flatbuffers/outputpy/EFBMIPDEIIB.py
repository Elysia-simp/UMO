# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers

class EFBMIPDEIIB(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsEFBMIPDEIIB(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = EFBMIPDEIIB()
        x.Init(buf, n + offset)
        return x

    # EFBMIPDEIIB
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # EFBMIPDEIIB
    def FHLKEIBOFNN(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # EFBMIPDEIIB
    def EGEFMJCLNDM(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # EFBMIPDEIIB
    def KDPKPOBKKMJ(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def EFBMIPDEIIBStart(builder): builder.StartObject(3)
def EFBMIPDEIIBAddFHLKEIBOFNN(builder, FHLKEIBOFNN): builder.PrependUint32Slot(0, FHLKEIBOFNN, 0)
def EFBMIPDEIIBAddEGEFMJCLNDM(builder, EGEFMJCLNDM): builder.PrependUint32Slot(1, EGEFMJCLNDM, 0)
def EFBMIPDEIIBAddKDPKPOBKKMJ(builder, KDPKPOBKKMJ): builder.PrependUint32Slot(2, KDPKPOBKKMJ, 0)
def EFBMIPDEIIBEnd(builder): return builder.EndObject()
