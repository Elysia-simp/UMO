# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers

class INOFLJPLFAN(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsINOFLJPLFAN(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = INOFLJPLFAN()
        x.Init(buf, n + offset)
        return x

    # INOFLJPLFAN
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # INOFLJPLFAN
    def PAAOHNKLBAC(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # INOFLJPLFAN
    def MBBJMJAAODG(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # INOFLJPLFAN
    def LFFMNLEJJMH(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # INOFLJPLFAN
    def PAEGHLMNPNO(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # INOFLJPLFAN
    def ODBPKGJPLMD(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def INOFLJPLFANStart(builder): builder.StartObject(5)
def INOFLJPLFANAddPAAOHNKLBAC(builder, PAAOHNKLBAC): builder.PrependInt32Slot(0, PAAOHNKLBAC, 0)
def INOFLJPLFANAddMBBJMJAAODG(builder, MBBJMJAAODG): builder.PrependInt32Slot(1, MBBJMJAAODG, 0)
def INOFLJPLFANAddLFFMNLEJJMH(builder, LFFMNLEJJMH): builder.PrependInt32Slot(2, LFFMNLEJJMH, 0)
def INOFLJPLFANAddPAEGHLMNPNO(builder, PAEGHLMNPNO): builder.PrependInt32Slot(3, PAEGHLMNPNO, 0)
def INOFLJPLFANAddODBPKGJPLMD(builder, ODBPKGJPLMD): builder.PrependInt32Slot(4, ODBPKGJPLMD, 0)
def INOFLJPLFANEnd(builder): return builder.EndObject()
