# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers

class OBEFECOGHGM(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsOBEFECOGHGM(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = OBEFECOGHGM()
        x.Init(buf, n + offset)
        return x

    # OBEFECOGHGM
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # OBEFECOGHGM
    def IIDCFMHCPLJ(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return ""

    # OBEFECOGHGM
    def LENIKJONAFB(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # OBEFECOGHGM
    def FIABJKGEJFF(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # OBEFECOGHGM
    def ICOLJHNBDIA(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # OBEFECOGHGM
    def FFJIHOINOLL(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # OBEFECOGHGM
    def KEPFKJDEGOO(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def OBEFECOGHGMStart(builder): builder.StartObject(6)
def OBEFECOGHGMAddIIDCFMHCPLJ(builder, IIDCFMHCPLJ): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(IIDCFMHCPLJ), 0)
def OBEFECOGHGMAddLENIKJONAFB(builder, LENIKJONAFB): builder.PrependInt32Slot(1, LENIKJONAFB, 0)
def OBEFECOGHGMAddFIABJKGEJFF(builder, FIABJKGEJFF): builder.PrependInt32Slot(2, FIABJKGEJFF, 0)
def OBEFECOGHGMAddICOLJHNBDIA(builder, ICOLJHNBDIA): builder.PrependInt32Slot(3, ICOLJHNBDIA, 0)
def OBEFECOGHGMAddFFJIHOINOLL(builder, FFJIHOINOLL): builder.PrependInt32Slot(4, FFJIHOINOLL, 0)
def OBEFECOGHGMAddKEPFKJDEGOO(builder, KEPFKJDEGOO): builder.PrependInt32Slot(5, KEPFKJDEGOO, 0)
def OBEFECOGHGMEnd(builder): return builder.EndObject()
