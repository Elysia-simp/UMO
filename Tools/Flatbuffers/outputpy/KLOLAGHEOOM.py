# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers

class KLOLAGHEOOM(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsKLOLAGHEOOM(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = KLOLAGHEOOM()
        x.Init(buf, n + offset)
        return x

    # KLOLAGHEOOM
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # KLOLAGHEOOM
    def BBPHAPFBFHK(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # KLOLAGHEOOM
    def CFLMCGOJJJD(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # KLOLAGHEOOM
    def AEAKMMJLLDK(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # KLOLAGHEOOM
    def EGPGKNLIBCG(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # KLOLAGHEOOM
    def KAOJJKIALDA(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # KLOLAGHEOOM
    def LPJPOOHJKAE(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # KLOLAGHEOOM
    def AJBJHLGIHIP(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def KLOLAGHEOOMStart(builder): builder.StartObject(7)
def KLOLAGHEOOMAddBBPHAPFBFHK(builder, BBPHAPFBFHK): builder.PrependUint32Slot(0, BBPHAPFBFHK, 0)
def KLOLAGHEOOMAddCFLMCGOJJJD(builder, CFLMCGOJJJD): builder.PrependUint32Slot(1, CFLMCGOJJJD, 0)
def KLOLAGHEOOMAddAEAKMMJLLDK(builder, AEAKMMJLLDK): builder.PrependUint32Slot(2, AEAKMMJLLDK, 0)
def KLOLAGHEOOMAddEGPGKNLIBCG(builder, EGPGKNLIBCG): builder.PrependInt32Slot(3, EGPGKNLIBCG, 0)
def KLOLAGHEOOMAddKAOJJKIALDA(builder, KAOJJKIALDA): builder.PrependInt32Slot(4, KAOJJKIALDA, 0)
def KLOLAGHEOOMAddLPJPOOHJKAE(builder, LPJPOOHJKAE): builder.PrependInt32Slot(5, LPJPOOHJKAE, 0)
def KLOLAGHEOOMAddAJBJHLGIHIP(builder, AJBJHLGIHIP): builder.PrependUint32Slot(6, AJBJHLGIHIP, 0)
def KLOLAGHEOOMEnd(builder): return builder.EndObject()
