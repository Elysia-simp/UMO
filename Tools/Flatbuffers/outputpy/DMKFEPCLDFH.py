# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers

class DMKFEPCLDFH(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsDMKFEPCLDFH(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DMKFEPCLDFH()
        x.Init(buf, n + offset)
        return x

    # DMKFEPCLDFH
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DMKFEPCLDFH
    def FGONCIDNPDP(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # DMKFEPCLDFH
    def HIDFDGINLBJ(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # DMKFEPCLDFH
    def MGLPLCPEMHE(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # DMKFEPCLDFH
    def GCBAPHAAFFA(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # DMKFEPCLDFH
    def DHLNJKEODAI(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # DMKFEPCLDFH
    def MIOPDFDOADI(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def DMKFEPCLDFHStart(builder): builder.StartObject(6)
def DMKFEPCLDFHAddFGONCIDNPDP(builder, FGONCIDNPDP): builder.PrependInt32Slot(0, FGONCIDNPDP, 0)
def DMKFEPCLDFHAddHIDFDGINLBJ(builder, HIDFDGINLBJ): builder.PrependInt32Slot(1, HIDFDGINLBJ, 0)
def DMKFEPCLDFHAddMGLPLCPEMHE(builder, MGLPLCPEMHE): builder.PrependInt32Slot(2, MGLPLCPEMHE, 0)
def DMKFEPCLDFHAddGCBAPHAAFFA(builder, GCBAPHAAFFA): builder.PrependInt32Slot(3, GCBAPHAAFFA, 0)
def DMKFEPCLDFHAddDHLNJKEODAI(builder, DHLNJKEODAI): builder.PrependInt32Slot(4, DHLNJKEODAI, 0)
def DMKFEPCLDFHAddMIOPDFDOADI(builder, MIOPDFDOADI): builder.PrependInt32Slot(5, MIOPDFDOADI, 0)
def DMKFEPCLDFHEnd(builder): return builder.EndObject()
