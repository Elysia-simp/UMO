# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers

class PNLDFJMHBJH(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsPNLDFJMHBJH(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = PNLDFJMHBJH()
        x.Init(buf, n + offset)
        return x

    # PNLDFJMHBJH
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # PNLDFJMHBJH
    def BBPHAPFBFHK(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # PNLDFJMHBJH
    def IIDCFMHCPLJ(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return ""

    # PNLDFJMHBJH
    def HAEJDOGGKPC(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return ""

    # PNLDFJMHBJH
    def NHNLGCMFBNC(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # PNLDFJMHBJH
    def NHNLGCMFBNCLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

def PNLDFJMHBJHStart(builder): builder.StartObject(4)
def PNLDFJMHBJHAddBBPHAPFBFHK(builder, BBPHAPFBFHK): builder.PrependUint32Slot(0, BBPHAPFBFHK, 0)
def PNLDFJMHBJHAddIIDCFMHCPLJ(builder, IIDCFMHCPLJ): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(IIDCFMHCPLJ), 0)
def PNLDFJMHBJHAddHAEJDOGGKPC(builder, HAEJDOGGKPC): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(HAEJDOGGKPC), 0)
def PNLDFJMHBJHAddNHNLGCMFBNC(builder, NHNLGCMFBNC): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(NHNLGCMFBNC), 0)
def PNLDFJMHBJHStartNHNLGCMFBNCVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def PNLDFJMHBJHEnd(builder): return builder.EndObject()
