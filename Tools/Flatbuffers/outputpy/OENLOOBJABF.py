# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers

class OENLOOBJABF(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsOENLOOBJABF(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = OENLOOBJABF()
        x.Init(buf, n + offset)
        return x

    # OENLOOBJABF
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # OENLOOBJABF
    def NCIKNCJLFBI(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # OENLOOBJABF
    def COPFAKAHEMN(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # OENLOOBJABF
    def HLPHBGLMBIO(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # OENLOOBJABF
    def LPJPOOHJKAE(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # OENLOOBJABF
    def CHGIONDFIKP(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # OENLOOBJABF
    def CHGIONDFIKPLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

def OENLOOBJABFStart(builder): builder.StartObject(5)
def OENLOOBJABFAddNCIKNCJLFBI(builder, NCIKNCJLFBI): builder.PrependUint32Slot(0, NCIKNCJLFBI, 0)
def OENLOOBJABFAddCOPFAKAHEMN(builder, COPFAKAHEMN): builder.PrependUint32Slot(1, COPFAKAHEMN, 0)
def OENLOOBJABFAddHLPHBGLMBIO(builder, HLPHBGLMBIO): builder.PrependUint32Slot(2, HLPHBGLMBIO, 0)
def OENLOOBJABFAddLPJPOOHJKAE(builder, LPJPOOHJKAE): builder.PrependUint32Slot(3, LPJPOOHJKAE, 0)
def OENLOOBJABFAddCHGIONDFIKP(builder, CHGIONDFIKP): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(CHGIONDFIKP), 0)
def OENLOOBJABFStartCHGIONDFIKPVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def OENLOOBJABFEnd(builder): return builder.EndObject()
