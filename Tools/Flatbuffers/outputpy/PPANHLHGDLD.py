# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers

class PPANHLHGDLD(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsPPANHLHGDLD(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = PPANHLHGDLD()
        x.Init(buf, n + offset)
        return x

    # PPANHLHGDLD
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # PPANHLHGDLD
    def BBPHAPFBFHK(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # PPANHLHGDLD
    def CFLMCGOJJJD(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # PPANHLHGDLD
    def IAPFGOHKAGE(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # PPANHLHGDLD
    def KAIMDDPJEON(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # PPANHLHGDLD
    def NJLJEKDBPCH(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PPANHLHGDLD
    def MAOAGDBDBIB(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def PPANHLHGDLDStart(builder): builder.StartObject(6)
def PPANHLHGDLDAddBBPHAPFBFHK(builder, BBPHAPFBFHK): builder.PrependUint32Slot(0, BBPHAPFBFHK, 0)
def PPANHLHGDLDAddCFLMCGOJJJD(builder, CFLMCGOJJJD): builder.PrependUint32Slot(1, CFLMCGOJJJD, 0)
def PPANHLHGDLDAddIAPFGOHKAGE(builder, IAPFGOHKAGE): builder.PrependUint32Slot(2, IAPFGOHKAGE, 0)
def PPANHLHGDLDAddKAIMDDPJEON(builder, KAIMDDPJEON): builder.PrependUint32Slot(3, KAIMDDPJEON, 0)
def PPANHLHGDLDAddNJLJEKDBPCH(builder, NJLJEKDBPCH): builder.PrependInt32Slot(4, NJLJEKDBPCH, 0)
def PPANHLHGDLDAddMAOAGDBDBIB(builder, MAOAGDBDBIB): builder.PrependInt32Slot(5, MAOAGDBDBIB, 0)
def PPANHLHGDLDEnd(builder): return builder.EndObject()
