# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers

class JDNHKBBPAOI(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsJDNHKBBPAOI(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = JDNHKBBPAOI()
        x.Init(buf, n + offset)
        return x

    # JDNHKBBPAOI
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # JDNHKBBPAOI
    def NAJHJIHCOON(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # JDNHKBBPAOI
    def CBGDIIIBBAN(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def JDNHKBBPAOIStart(builder): builder.StartObject(2)
def JDNHKBBPAOIAddNAJHJIHCOON(builder, NAJHJIHCOON): builder.PrependUint32Slot(0, NAJHJIHCOON, 0)
def JDNHKBBPAOIAddCBGDIIIBBAN(builder, CBGDIIIBBAN): builder.PrependUint32Slot(1, CBGDIIIBBAN, 0)
def JDNHKBBPAOIEnd(builder): return builder.EndObject()
