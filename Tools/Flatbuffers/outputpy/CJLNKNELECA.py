# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers

class CJLNKNELECA(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsCJLNKNELECA(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CJLNKNELECA()
        x.Init(buf, n + offset)
        return x

    # CJLNKNELECA
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CJLNKNELECA
    def ILGBFGPGNGL(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CJLNKNELECA
    def CCIHMCAPHCB(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CJLNKNELECA
    def GEJGMBBCFEE(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CJLNKNELECA
    def NOFLCNIGNEG(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CJLNKNELECA
    def PHOBAICLCKE(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def CJLNKNELECAStart(builder): builder.StartObject(5)
def CJLNKNELECAAddILGBFGPGNGL(builder, ILGBFGPGNGL): builder.PrependInt32Slot(0, ILGBFGPGNGL, 0)
def CJLNKNELECAAddCCIHMCAPHCB(builder, CCIHMCAPHCB): builder.PrependInt32Slot(1, CCIHMCAPHCB, 0)
def CJLNKNELECAAddGEJGMBBCFEE(builder, GEJGMBBCFEE): builder.PrependInt32Slot(2, GEJGMBBCFEE, 0)
def CJLNKNELECAAddNOFLCNIGNEG(builder, NOFLCNIGNEG): builder.PrependInt32Slot(3, NOFLCNIGNEG, 0)
def CJLNKNELECAAddPHOBAICLCKE(builder, PHOBAICLCKE): builder.PrependInt32Slot(4, PHOBAICLCKE, 0)
def CJLNKNELECAEnd(builder): return builder.EndObject()
