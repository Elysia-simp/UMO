// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class FDEDPMKCNLB : Table {
  public static FDEDPMKCNLB GetRootAsFDEDPMKCNLB(ByteBuffer _bb) { return GetRootAsFDEDPMKCNLB(_bb, new FDEDPMKCNLB()); }
  public static FDEDPMKCNLB GetRootAsFDEDPMKCNLB(ByteBuffer _bb, FDEDPMKCNLB obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public FDEDPMKCNLB __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int BBPHAPFBFHK { get { int o = __offset(4); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int OFMGALJGDAO { get { int o = __offset(6); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int CFLMCGOJJJD { get { int o = __offset(8); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int NJLJEKDBPCH { get { int o = __offset(10); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int MAOAGDBDBIB { get { int o = __offset(12); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int GetEOLOEKNHBGK(int j) { int o = __offset(14); return o != 0 ? bb.GetInt(__vector(o) + j * 4) : (int)0; }
  public int EOLOEKNHBGKLength { get { int o = __offset(14); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetEOLOEKNHBGKBytes() { return __vector_as_arraysegment(14); }
  public int GetDHFIMBLLAMO(int j) { int o = __offset(16); return o != 0 ? bb.GetInt(__vector(o) + j * 4) : (int)0; }
  public int DHFIMBLLAMOLength { get { int o = __offset(16); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetDHFIMBLLAMOBytes() { return __vector_as_arraysegment(16); }

  public static Offset<FDEDPMKCNLB> CreateFDEDPMKCNLB(FlatBufferBuilder builder,
      int BBPHAPFBFHK = 0,
      int OFMGALJGDAO = 0,
      int CFLMCGOJJJD = 0,
      int NJLJEKDBPCH = 0,
      int MAOAGDBDBIB = 0,
      VectorOffset EOLOEKNHBGKOffset = default(VectorOffset),
      VectorOffset DHFIMBLLAMOOffset = default(VectorOffset)) {
    builder.StartObject(7);
    FDEDPMKCNLB.AddDHFIMBLLAMO(builder, DHFIMBLLAMOOffset);
    FDEDPMKCNLB.AddEOLOEKNHBGK(builder, EOLOEKNHBGKOffset);
    FDEDPMKCNLB.AddMAOAGDBDBIB(builder, MAOAGDBDBIB);
    FDEDPMKCNLB.AddNJLJEKDBPCH(builder, NJLJEKDBPCH);
    FDEDPMKCNLB.AddCFLMCGOJJJD(builder, CFLMCGOJJJD);
    FDEDPMKCNLB.AddOFMGALJGDAO(builder, OFMGALJGDAO);
    FDEDPMKCNLB.AddBBPHAPFBFHK(builder, BBPHAPFBFHK);
    return FDEDPMKCNLB.EndFDEDPMKCNLB(builder);
  }

  public static void StartFDEDPMKCNLB(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddBBPHAPFBFHK(FlatBufferBuilder builder, int BBPHAPFBFHK) { builder.AddInt(0, BBPHAPFBFHK, 0); }
  public static void AddOFMGALJGDAO(FlatBufferBuilder builder, int OFMGALJGDAO) { builder.AddInt(1, OFMGALJGDAO, 0); }
  public static void AddCFLMCGOJJJD(FlatBufferBuilder builder, int CFLMCGOJJJD) { builder.AddInt(2, CFLMCGOJJJD, 0); }
  public static void AddNJLJEKDBPCH(FlatBufferBuilder builder, int NJLJEKDBPCH) { builder.AddInt(3, NJLJEKDBPCH, 0); }
  public static void AddMAOAGDBDBIB(FlatBufferBuilder builder, int MAOAGDBDBIB) { builder.AddInt(4, MAOAGDBDBIB, 0); }
  public static void AddEOLOEKNHBGK(FlatBufferBuilder builder, VectorOffset EOLOEKNHBGKOffset) { builder.AddOffset(5, EOLOEKNHBGKOffset.Value, 0); }
  public static VectorOffset CreateEOLOEKNHBGKVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartEOLOEKNHBGKVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDHFIMBLLAMO(FlatBufferBuilder builder, VectorOffset DHFIMBLLAMOOffset) { builder.AddOffset(6, DHFIMBLLAMOOffset.Value, 0); }
  public static VectorOffset CreateDHFIMBLLAMOVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartDHFIMBLLAMOVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<FDEDPMKCNLB> EndFDEDPMKCNLB(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<FDEDPMKCNLB>(o);
  }
};

