// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class APIFHKKHODH : Table {
  public static APIFHKKHODH GetRootAsAPIFHKKHODH(ByteBuffer _bb) { return GetRootAsAPIFHKKHODH(_bb, new APIFHKKHODH()); }
  public static APIFHKKHODH GetRootAsAPIFHKKHODH(ByteBuffer _bb, APIFHKKHODH obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public APIFHKKHODH __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public uint DLPCOLDNAKE { get { int o = __offset(4); return o != 0 ? bb.GetUint(o + bb_pos) : (uint)0; } }
  public uint GDLJMMPFINH { get { int o = __offset(6); return o != 0 ? bb.GetUint(o + bb_pos) : (uint)0; } }
  public uint LBMKEILIGBG { get { int o = __offset(8); return o != 0 ? bb.GetUint(o + bb_pos) : (uint)0; } }
  public uint ADCLAGBHDBC { get { int o = __offset(10); return o != 0 ? bb.GetUint(o + bb_pos) : (uint)0; } }
  public uint CBPNNKIHKNG { get { int o = __offset(12); return o != 0 ? bb.GetUint(o + bb_pos) : (uint)0; } }
  public uint GetPMNEOKOIHPD(int j) { int o = __offset(14); return o != 0 ? bb.GetUint(__vector(o) + j * 4) : (uint)0; }
  public int PMNEOKOIHPDLength { get { int o = __offset(14); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetPMNEOKOIHPDBytes() { return __vector_as_arraysegment(14); }

  public static Offset<APIFHKKHODH> CreateAPIFHKKHODH(FlatBufferBuilder builder,
      uint DLPCOLDNAKE = 0,
      uint GDLJMMPFINH = 0,
      uint LBMKEILIGBG = 0,
      uint ADCLAGBHDBC = 0,
      uint CBPNNKIHKNG = 0,
      VectorOffset PMNEOKOIHPDOffset = default(VectorOffset)) {
    builder.StartObject(6);
    APIFHKKHODH.AddPMNEOKOIHPD(builder, PMNEOKOIHPDOffset);
    APIFHKKHODH.AddCBPNNKIHKNG(builder, CBPNNKIHKNG);
    APIFHKKHODH.AddADCLAGBHDBC(builder, ADCLAGBHDBC);
    APIFHKKHODH.AddLBMKEILIGBG(builder, LBMKEILIGBG);
    APIFHKKHODH.AddGDLJMMPFINH(builder, GDLJMMPFINH);
    APIFHKKHODH.AddDLPCOLDNAKE(builder, DLPCOLDNAKE);
    return APIFHKKHODH.EndAPIFHKKHODH(builder);
  }

  public static void StartAPIFHKKHODH(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddDLPCOLDNAKE(FlatBufferBuilder builder, uint DLPCOLDNAKE) { builder.AddUint(0, DLPCOLDNAKE, 0); }
  public static void AddGDLJMMPFINH(FlatBufferBuilder builder, uint GDLJMMPFINH) { builder.AddUint(1, GDLJMMPFINH, 0); }
  public static void AddLBMKEILIGBG(FlatBufferBuilder builder, uint LBMKEILIGBG) { builder.AddUint(2, LBMKEILIGBG, 0); }
  public static void AddADCLAGBHDBC(FlatBufferBuilder builder, uint ADCLAGBHDBC) { builder.AddUint(3, ADCLAGBHDBC, 0); }
  public static void AddCBPNNKIHKNG(FlatBufferBuilder builder, uint CBPNNKIHKNG) { builder.AddUint(4, CBPNNKIHKNG, 0); }
  public static void AddPMNEOKOIHPD(FlatBufferBuilder builder, VectorOffset PMNEOKOIHPDOffset) { builder.AddOffset(5, PMNEOKOIHPDOffset.Value, 0); }
  public static VectorOffset CreatePMNEOKOIHPDVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static void StartPMNEOKOIHPDVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<APIFHKKHODH> EndAPIFHKKHODH(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<APIFHKKHODH>(o);
  }
};

