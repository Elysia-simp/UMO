// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class DILKNNAKBII : Table {
  public static DILKNNAKBII GetRootAsDILKNNAKBII(ByteBuffer _bb) { return GetRootAsDILKNNAKBII(_bb, new DILKNNAKBII()); }
  public static DILKNNAKBII GetRootAsDILKNNAKBII(ByteBuffer _bb, DILKNNAKBII obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public DILKNNAKBII __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int BBPHAPFBFHK { get { int o = __offset(4); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public uint CFLMCGOJJJD { get { int o = __offset(6); return o != 0 ? bb.GetUint(o + bb_pos) : (uint)0; } }
  public int LMLNKHMPOIG { get { int o = __offset(8); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int PIFAMBCEMKL { get { int o = __offset(10); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int GetAGPECCAGHFL(int j) { int o = __offset(12); return o != 0 ? bb.GetInt(__vector(o) + j * 4) : (int)0; }
  public int AGPECCAGHFLLength { get { int o = __offset(12); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetAGPECCAGHFLBytes() { return __vector_as_arraysegment(12); }

  public static Offset<DILKNNAKBII> CreateDILKNNAKBII(FlatBufferBuilder builder,
      int BBPHAPFBFHK = 0,
      uint CFLMCGOJJJD = 0,
      int LMLNKHMPOIG = 0,
      int PIFAMBCEMKL = 0,
      VectorOffset AGPECCAGHFLOffset = default(VectorOffset)) {
    builder.StartObject(5);
    DILKNNAKBII.AddAGPECCAGHFL(builder, AGPECCAGHFLOffset);
    DILKNNAKBII.AddPIFAMBCEMKL(builder, PIFAMBCEMKL);
    DILKNNAKBII.AddLMLNKHMPOIG(builder, LMLNKHMPOIG);
    DILKNNAKBII.AddCFLMCGOJJJD(builder, CFLMCGOJJJD);
    DILKNNAKBII.AddBBPHAPFBFHK(builder, BBPHAPFBFHK);
    return DILKNNAKBII.EndDILKNNAKBII(builder);
  }

  public static void StartDILKNNAKBII(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddBBPHAPFBFHK(FlatBufferBuilder builder, int BBPHAPFBFHK) { builder.AddInt(0, BBPHAPFBFHK, 0); }
  public static void AddCFLMCGOJJJD(FlatBufferBuilder builder, uint CFLMCGOJJJD) { builder.AddUint(1, CFLMCGOJJJD, 0); }
  public static void AddLMLNKHMPOIG(FlatBufferBuilder builder, int LMLNKHMPOIG) { builder.AddInt(2, LMLNKHMPOIG, 0); }
  public static void AddPIFAMBCEMKL(FlatBufferBuilder builder, int PIFAMBCEMKL) { builder.AddInt(3, PIFAMBCEMKL, 0); }
  public static void AddAGPECCAGHFL(FlatBufferBuilder builder, VectorOffset AGPECCAGHFLOffset) { builder.AddOffset(4, AGPECCAGHFLOffset.Value, 0); }
  public static VectorOffset CreateAGPECCAGHFLVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartAGPECCAGHFLVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<DILKNNAKBII> EndDILKNNAKBII(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<DILKNNAKBII>(o);
  }
};

