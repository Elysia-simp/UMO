// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class IPIBGJJPKLO : Table {
  public static IPIBGJJPKLO GetRootAsIPIBGJJPKLO(ByteBuffer _bb) { return GetRootAsIPIBGJJPKLO(_bb, new IPIBGJJPKLO()); }
  public static IPIBGJJPKLO GetRootAsIPIBGJJPKLO(ByteBuffer _bb, IPIBGJJPKLO obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public IPIBGJJPKLO __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int GetFOGBEEHMDJM(int j) { int o = __offset(4); return o != 0 ? bb.GetInt(__vector(o) + j * 4) : (int)0; }
  public int FOGBEEHMDJMLength { get { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetFOGBEEHMDJMBytes() { return __vector_as_arraysegment(4); }
  public int GetBIMBNIBIMHA(int j) { int o = __offset(6); return o != 0 ? bb.GetInt(__vector(o) + j * 4) : (int)0; }
  public int BIMBNIBIMHALength { get { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetBIMBNIBIMHABytes() { return __vector_as_arraysegment(6); }

  public static Offset<IPIBGJJPKLO> CreateIPIBGJJPKLO(FlatBufferBuilder builder,
      VectorOffset FOGBEEHMDJMOffset = default(VectorOffset),
      VectorOffset BIMBNIBIMHAOffset = default(VectorOffset)) {
    builder.StartObject(2);
    IPIBGJJPKLO.AddBIMBNIBIMHA(builder, BIMBNIBIMHAOffset);
    IPIBGJJPKLO.AddFOGBEEHMDJM(builder, FOGBEEHMDJMOffset);
    return IPIBGJJPKLO.EndIPIBGJJPKLO(builder);
  }

  public static void StartIPIBGJJPKLO(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddFOGBEEHMDJM(FlatBufferBuilder builder, VectorOffset FOGBEEHMDJMOffset) { builder.AddOffset(0, FOGBEEHMDJMOffset.Value, 0); }
  public static VectorOffset CreateFOGBEEHMDJMVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartFOGBEEHMDJMVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBIMBNIBIMHA(FlatBufferBuilder builder, VectorOffset BIMBNIBIMHAOffset) { builder.AddOffset(1, BIMBNIBIMHAOffset.Value, 0); }
  public static VectorOffset CreateBIMBNIBIMHAVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartBIMBNIBIMHAVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<IPIBGJJPKLO> EndIPIBGJJPKLO(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<IPIBGJJPKLO>(o);
  }
};

