// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class NCJELDIPMGO : Table {
  public static NCJELDIPMGO GetRootAsNCJELDIPMGO(ByteBuffer _bb) { return GetRootAsNCJELDIPMGO(_bb, new NCJELDIPMGO()); }
  public static NCJELDIPMGO GetRootAsNCJELDIPMGO(ByteBuffer _bb, NCJELDIPMGO obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public NCJELDIPMGO __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public ENFPBAMFLPL GetDLBEPCGINEO(int j) { return GetDLBEPCGINEO(new ENFPBAMFLPL(), j); }
  public ENFPBAMFLPL GetDLBEPCGINEO(ENFPBAMFLPL obj, int j) { int o = __offset(4); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int DLBEPCGINEOLength { get { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; } }
  public HGLIPFFGBBC GetIOCIMBDOMFI(int j) { return GetIOCIMBDOMFI(new HGLIPFFGBBC(), j); }
  public HGLIPFFGBBC GetIOCIMBDOMFI(HGLIPFFGBBC obj, int j) { int o = __offset(6); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int IOCIMBDOMFILength { get { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; } }

  public static Offset<NCJELDIPMGO> CreateNCJELDIPMGO(FlatBufferBuilder builder,
      VectorOffset DLBEPCGINEOOffset = default(VectorOffset),
      VectorOffset IOCIMBDOMFIOffset = default(VectorOffset)) {
    builder.StartObject(2);
    NCJELDIPMGO.AddIOCIMBDOMFI(builder, IOCIMBDOMFIOffset);
    NCJELDIPMGO.AddDLBEPCGINEO(builder, DLBEPCGINEOOffset);
    return NCJELDIPMGO.EndNCJELDIPMGO(builder);
  }

  public static void StartNCJELDIPMGO(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddDLBEPCGINEO(FlatBufferBuilder builder, VectorOffset DLBEPCGINEOOffset) { builder.AddOffset(0, DLBEPCGINEOOffset.Value, 0); }
  public static VectorOffset CreateDLBEPCGINEOVector(FlatBufferBuilder builder, Offset<ENFPBAMFLPL>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartDLBEPCGINEOVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddIOCIMBDOMFI(FlatBufferBuilder builder, VectorOffset IOCIMBDOMFIOffset) { builder.AddOffset(1, IOCIMBDOMFIOffset.Value, 0); }
  public static VectorOffset CreateIOCIMBDOMFIVector(FlatBufferBuilder builder, Offset<HGLIPFFGBBC>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartIOCIMBDOMFIVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<NCJELDIPMGO> EndNCJELDIPMGO(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<NCJELDIPMGO>(o);
  }
};

