// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class PMEKDNKBNBI : Table {
  public static PMEKDNKBNBI GetRootAsPMEKDNKBNBI(ByteBuffer _bb) { return GetRootAsPMEKDNKBNBI(_bb, new PMEKDNKBNBI()); }
  public static PMEKDNKBNBI GetRootAsPMEKDNKBNBI(ByteBuffer _bb, PMEKDNKBNBI obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public PMEKDNKBNBI __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int APMIOOKCLFI { get { int o = __offset(4); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int EINIBCEFPPL { get { int o = __offset(6); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int CFLMCGOJJJD { get { int o = __offset(8); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }

  public static Offset<PMEKDNKBNBI> CreatePMEKDNKBNBI(FlatBufferBuilder builder,
      int APMIOOKCLFI = 0,
      int EINIBCEFPPL = 0,
      int CFLMCGOJJJD = 0) {
    builder.StartObject(3);
    PMEKDNKBNBI.AddCFLMCGOJJJD(builder, CFLMCGOJJJD);
    PMEKDNKBNBI.AddEINIBCEFPPL(builder, EINIBCEFPPL);
    PMEKDNKBNBI.AddAPMIOOKCLFI(builder, APMIOOKCLFI);
    return PMEKDNKBNBI.EndPMEKDNKBNBI(builder);
  }

  public static void StartPMEKDNKBNBI(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddAPMIOOKCLFI(FlatBufferBuilder builder, int APMIOOKCLFI) { builder.AddInt(0, APMIOOKCLFI, 0); }
  public static void AddEINIBCEFPPL(FlatBufferBuilder builder, int EINIBCEFPPL) { builder.AddInt(1, EINIBCEFPPL, 0); }
  public static void AddCFLMCGOJJJD(FlatBufferBuilder builder, int CFLMCGOJJJD) { builder.AddInt(2, CFLMCGOJJJD, 0); }
  public static Offset<PMEKDNKBNBI> EndPMEKDNKBNBI(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PMEKDNKBNBI>(o);
  }
};

