// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class AHCMKLEDILD : Table {
  public static AHCMKLEDILD GetRootAsAHCMKLEDILD(ByteBuffer _bb) { return GetRootAsAHCMKLEDILD(_bb, new AHCMKLEDILD()); }
  public static AHCMKLEDILD GetRootAsAHCMKLEDILD(ByteBuffer _bb, AHCMKLEDILD obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public AHCMKLEDILD __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public string DCEDMFDNAKH { get { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetDCEDMFDNAKHBytes() { return __vector_as_arraysegment(4); }
  public int OFMGALJGDAO { get { int o = __offset(6); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }

  public static Offset<AHCMKLEDILD> CreateAHCMKLEDILD(FlatBufferBuilder builder,
      StringOffset DCEDMFDNAKHOffset = default(StringOffset),
      int OFMGALJGDAO = 0) {
    builder.StartObject(2);
    AHCMKLEDILD.AddOFMGALJGDAO(builder, OFMGALJGDAO);
    AHCMKLEDILD.AddDCEDMFDNAKH(builder, DCEDMFDNAKHOffset);
    return AHCMKLEDILD.EndAHCMKLEDILD(builder);
  }

  public static void StartAHCMKLEDILD(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddDCEDMFDNAKH(FlatBufferBuilder builder, StringOffset DCEDMFDNAKHOffset) { builder.AddOffset(0, DCEDMFDNAKHOffset.Value, 0); }
  public static void AddOFMGALJGDAO(FlatBufferBuilder builder, int OFMGALJGDAO) { builder.AddInt(1, OFMGALJGDAO, 0); }
  public static Offset<AHCMKLEDILD> EndAHCMKLEDILD(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<AHCMKLEDILD>(o);
  }
};

