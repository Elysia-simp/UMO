// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class EHCHNFGDMIN : Table {
  public static EHCHNFGDMIN GetRootAsEHCHNFGDMIN(ByteBuffer _bb) { return GetRootAsEHCHNFGDMIN(_bb, new EHCHNFGDMIN()); }
  public static EHCHNFGDMIN GetRootAsEHCHNFGDMIN(ByteBuffer _bb, EHCHNFGDMIN obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public EHCHNFGDMIN __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public uint MJOCIHPPKNO { get { int o = __offset(4); return o != 0 ? bb.GetUint(o + bb_pos) : (uint)0; } }
  public uint GetLEFPIGNDJNC(int j) { int o = __offset(6); return o != 0 ? bb.GetUint(__vector(o) + j * 4) : (uint)0; }
  public int LEFPIGNDJNCLength { get { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetLEFPIGNDJNCBytes() { return __vector_as_arraysegment(6); }

  public static Offset<EHCHNFGDMIN> CreateEHCHNFGDMIN(FlatBufferBuilder builder,
      uint MJOCIHPPKNO = 0,
      VectorOffset LEFPIGNDJNCOffset = default(VectorOffset)) {
    builder.StartObject(2);
    EHCHNFGDMIN.AddLEFPIGNDJNC(builder, LEFPIGNDJNCOffset);
    EHCHNFGDMIN.AddMJOCIHPPKNO(builder, MJOCIHPPKNO);
    return EHCHNFGDMIN.EndEHCHNFGDMIN(builder);
  }

  public static void StartEHCHNFGDMIN(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddMJOCIHPPKNO(FlatBufferBuilder builder, uint MJOCIHPPKNO) { builder.AddUint(0, MJOCIHPPKNO, 0); }
  public static void AddLEFPIGNDJNC(FlatBufferBuilder builder, VectorOffset LEFPIGNDJNCOffset) { builder.AddOffset(1, LEFPIGNDJNCOffset.Value, 0); }
  public static VectorOffset CreateLEFPIGNDJNCVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static void StartLEFPIGNDJNCVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<EHCHNFGDMIN> EndEHCHNFGDMIN(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<EHCHNFGDMIN>(o);
  }
};

