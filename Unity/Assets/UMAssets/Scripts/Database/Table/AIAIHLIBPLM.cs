// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class AIAIHLIBPLM : Table {
  public static AIAIHLIBPLM GetRootAsAIAIHLIBPLM(ByteBuffer _bb) { return GetRootAsAIAIHLIBPLM(_bb, new AIAIHLIBPLM()); }
  public static AIAIHLIBPLM GetRootAsAIAIHLIBPLM(ByteBuffer _bb, AIAIHLIBPLM obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public AIAIHLIBPLM __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public MPAKIJAPJIC OPBPOOKODJK { get { return GetOPBPOOKODJK(new MPAKIJAPJIC()); } }
  public MPAKIJAPJIC GetOPBPOOKODJK(MPAKIJAPJIC obj) { int o = __offset(4); return o != 0 ? obj.__init(__indirect(o + bb_pos), bb) : null; }
  public DAIIOPHMNIM GetNJJINHMIOHN(int j) { return GetNJJINHMIOHN(new DAIIOPHMNIM(), j); }
  public DAIIOPHMNIM GetNJJINHMIOHN(DAIIOPHMNIM obj, int j) { int o = __offset(6); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int NJJINHMIOHNLength { get { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; } }
  public NNKOCPILBMP GetNPFBHGKLIOM(int j) { return GetNPFBHGKLIOM(new NNKOCPILBMP(), j); }
  public NNKOCPILBMP GetNPFBHGKLIOM(NNKOCPILBMP obj, int j) { int o = __offset(8); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int NPFBHGKLIOMLength { get { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; } }

  public static Offset<AIAIHLIBPLM> CreateAIAIHLIBPLM(FlatBufferBuilder builder,
      Offset<MPAKIJAPJIC> OPBPOOKODJKOffset = default(Offset<MPAKIJAPJIC>),
      VectorOffset NJJINHMIOHNOffset = default(VectorOffset),
      VectorOffset NPFBHGKLIOMOffset = default(VectorOffset)) {
    builder.StartObject(3);
    AIAIHLIBPLM.AddNPFBHGKLIOM(builder, NPFBHGKLIOMOffset);
    AIAIHLIBPLM.AddNJJINHMIOHN(builder, NJJINHMIOHNOffset);
    AIAIHLIBPLM.AddOPBPOOKODJK(builder, OPBPOOKODJKOffset);
    return AIAIHLIBPLM.EndAIAIHLIBPLM(builder);
  }

  public static void StartAIAIHLIBPLM(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddOPBPOOKODJK(FlatBufferBuilder builder, Offset<MPAKIJAPJIC> OPBPOOKODJKOffset) { builder.AddOffset(0, OPBPOOKODJKOffset.Value, 0); }
  public static void AddNJJINHMIOHN(FlatBufferBuilder builder, VectorOffset NJJINHMIOHNOffset) { builder.AddOffset(1, NJJINHMIOHNOffset.Value, 0); }
  public static VectorOffset CreateNJJINHMIOHNVector(FlatBufferBuilder builder, Offset<DAIIOPHMNIM>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartNJJINHMIOHNVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddNPFBHGKLIOM(FlatBufferBuilder builder, VectorOffset NPFBHGKLIOMOffset) { builder.AddOffset(2, NPFBHGKLIOMOffset.Value, 0); }
  public static VectorOffset CreateNPFBHGKLIOMVector(FlatBufferBuilder builder, Offset<NNKOCPILBMP>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartNPFBHGKLIOMVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<AIAIHLIBPLM> EndAIAIHLIBPLM(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<AIAIHLIBPLM>(o);
  }
};

