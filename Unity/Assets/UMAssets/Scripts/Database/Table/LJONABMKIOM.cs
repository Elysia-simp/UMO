// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class LJONABMKIOM : Table {
  public static LJONABMKIOM GetRootAsLJONABMKIOM(ByteBuffer _bb) { return GetRootAsLJONABMKIOM(_bb, new LJONABMKIOM()); }
  public static LJONABMKIOM GetRootAsLJONABMKIOM(ByteBuffer _bb, LJONABMKIOM obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public LJONABMKIOM __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int BNFLNMGOJCM { get { int o = __offset(4); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public string GetBPODDGNIDBG(int j) { int o = __offset(6); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int BPODDGNIDBGLength { get { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; } }

  public static Offset<LJONABMKIOM> CreateLJONABMKIOM(FlatBufferBuilder builder,
      int BNFLNMGOJCM = 0,
      VectorOffset BPODDGNIDBGOffset = default(VectorOffset)) {
    builder.StartObject(2);
    LJONABMKIOM.AddBPODDGNIDBG(builder, BPODDGNIDBGOffset);
    LJONABMKIOM.AddBNFLNMGOJCM(builder, BNFLNMGOJCM);
    return LJONABMKIOM.EndLJONABMKIOM(builder);
  }

  public static void StartLJONABMKIOM(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddBNFLNMGOJCM(FlatBufferBuilder builder, int BNFLNMGOJCM) { builder.AddInt(0, BNFLNMGOJCM, 0); }
  public static void AddBPODDGNIDBG(FlatBufferBuilder builder, VectorOffset BPODDGNIDBGOffset) { builder.AddOffset(1, BPODDGNIDBGOffset.Value, 0); }
  public static VectorOffset CreateBPODDGNIDBGVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartBPODDGNIDBGVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<LJONABMKIOM> EndLJONABMKIOM(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<LJONABMKIOM>(o);
  }
};

