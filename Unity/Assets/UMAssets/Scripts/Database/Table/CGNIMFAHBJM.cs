// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class CGNIMFAHBJM : Table {
  public static CGNIMFAHBJM GetRootAsCGNIMFAHBJM(ByteBuffer _bb) { return GetRootAsCGNIMFAHBJM(_bb, new CGNIMFAHBJM()); }
  public static CGNIMFAHBJM GetRootAsCGNIMFAHBJM(ByteBuffer _bb, CGNIMFAHBJM obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public CGNIMFAHBJM __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int NDJHFINEEGP { get { int o = __offset(4); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public uint GetCGKGLCKCAMC(int j) { int o = __offset(6); return o != 0 ? bb.GetUint(__vector(o) + j * 4) : (uint)0; }
  public int CGKGLCKCAMCLength { get { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetCGKGLCKCAMCBytes() { return __vector_as_arraysegment(6); }

  public static Offset<CGNIMFAHBJM> CreateCGNIMFAHBJM(FlatBufferBuilder builder,
      int NDJHFINEEGP = 0,
      VectorOffset CGKGLCKCAMCOffset = default(VectorOffset)) {
    builder.StartObject(2);
    CGNIMFAHBJM.AddCGKGLCKCAMC(builder, CGKGLCKCAMCOffset);
    CGNIMFAHBJM.AddNDJHFINEEGP(builder, NDJHFINEEGP);
    return CGNIMFAHBJM.EndCGNIMFAHBJM(builder);
  }

  public static void StartCGNIMFAHBJM(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddNDJHFINEEGP(FlatBufferBuilder builder, int NDJHFINEEGP) { builder.AddInt(0, NDJHFINEEGP, 0); }
  public static void AddCGKGLCKCAMC(FlatBufferBuilder builder, VectorOffset CGKGLCKCAMCOffset) { builder.AddOffset(1, CGKGLCKCAMCOffset.Value, 0); }
  public static VectorOffset CreateCGKGLCKCAMCVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static void StartCGKGLCKCAMCVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<CGNIMFAHBJM> EndCGNIMFAHBJM(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<CGNIMFAHBJM>(o);
  }
};

