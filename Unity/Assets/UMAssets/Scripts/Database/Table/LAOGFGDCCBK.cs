// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class LAOGFGDCCBK : Table {
  public static LAOGFGDCCBK GetRootAsLAOGFGDCCBK(ByteBuffer _bb) { return GetRootAsLAOGFGDCCBK(_bb, new LAOGFGDCCBK()); }
  public static LAOGFGDCCBK GetRootAsLAOGFGDCCBK(ByteBuffer _bb, LAOGFGDCCBK obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public LAOGFGDCCBK __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int BBPHAPFBFHK { get { int o = __offset(4); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int IOEAHIGFCBN { get { int o = __offset(6); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int GetABOCGFBPCBM(int j) { int o = __offset(8); return o != 0 ? bb.GetInt(__vector(o) + j * 4) : (int)0; }
  public int ABOCGFBPCBMLength { get { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetABOCGFBPCBMBytes() { return __vector_as_arraysegment(8); }
  public int GetJPMKDDLBBLG(int j) { int o = __offset(10); return o != 0 ? bb.GetInt(__vector(o) + j * 4) : (int)0; }
  public int JPMKDDLBBLGLength { get { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetJPMKDDLBBLGBytes() { return __vector_as_arraysegment(10); }

  public static Offset<LAOGFGDCCBK> CreateLAOGFGDCCBK(FlatBufferBuilder builder,
      int BBPHAPFBFHK = 0,
      int IOEAHIGFCBN = 0,
      VectorOffset ABOCGFBPCBMOffset = default(VectorOffset),
      VectorOffset JPMKDDLBBLGOffset = default(VectorOffset)) {
    builder.StartObject(4);
    LAOGFGDCCBK.AddJPMKDDLBBLG(builder, JPMKDDLBBLGOffset);
    LAOGFGDCCBK.AddABOCGFBPCBM(builder, ABOCGFBPCBMOffset);
    LAOGFGDCCBK.AddIOEAHIGFCBN(builder, IOEAHIGFCBN);
    LAOGFGDCCBK.AddBBPHAPFBFHK(builder, BBPHAPFBFHK);
    return LAOGFGDCCBK.EndLAOGFGDCCBK(builder);
  }

  public static void StartLAOGFGDCCBK(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddBBPHAPFBFHK(FlatBufferBuilder builder, int BBPHAPFBFHK) { builder.AddInt(0, BBPHAPFBFHK, 0); }
  public static void AddIOEAHIGFCBN(FlatBufferBuilder builder, int IOEAHIGFCBN) { builder.AddInt(1, IOEAHIGFCBN, 0); }
  public static void AddABOCGFBPCBM(FlatBufferBuilder builder, VectorOffset ABOCGFBPCBMOffset) { builder.AddOffset(2, ABOCGFBPCBMOffset.Value, 0); }
  public static VectorOffset CreateABOCGFBPCBMVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartABOCGFBPCBMVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddJPMKDDLBBLG(FlatBufferBuilder builder, VectorOffset JPMKDDLBBLGOffset) { builder.AddOffset(3, JPMKDDLBBLGOffset.Value, 0); }
  public static VectorOffset CreateJPMKDDLBBLGVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartJPMKDDLBBLGVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<LAOGFGDCCBK> EndLAOGFGDCCBK(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<LAOGFGDCCBK>(o);
  }
};

