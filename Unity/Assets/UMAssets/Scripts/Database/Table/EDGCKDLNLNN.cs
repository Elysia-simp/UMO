// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class EDGCKDLNLNN : Table {
  public static EDGCKDLNLNN GetRootAsEDGCKDLNLNN(ByteBuffer _bb) { return GetRootAsEDGCKDLNLNN(_bb, new EDGCKDLNLNN()); }
  public static EDGCKDLNLNN GetRootAsEDGCKDLNLNN(ByteBuffer _bb, EDGCKDLNLNN obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public EDGCKDLNLNN __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public uint BBPHAPFBFHK { get { int o = __offset(4); return o != 0 ? bb.GetUint(o + bb_pos) : (uint)0; } }
  public uint EOHDEKFEONI { get { int o = __offset(6); return o != 0 ? bb.GetUint(o + bb_pos) : (uint)0; } }
  public uint GetPLPNKMFFPLE(int j) { int o = __offset(8); return o != 0 ? bb.GetUint(__vector(o) + j * 4) : (uint)0; }
  public int PLPNKMFFPLELength { get { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetPLPNKMFFPLEBytes() { return __vector_as_arraysegment(8); }
  public uint LPJPOOHJKAE { get { int o = __offset(10); return o != 0 ? bb.GetUint(o + bb_pos) : (uint)0; } }
  public uint PAEGHLMNPNO { get { int o = __offset(12); return o != 0 ? bb.GetUint(o + bb_pos) : (uint)0; } }
  public uint OPOLOJINLPI { get { int o = __offset(14); return o != 0 ? bb.GetUint(o + bb_pos) : (uint)0; } }
  public uint GetNMKAIHMOFNA(int j) { int o = __offset(16); return o != 0 ? bb.GetUint(__vector(o) + j * 4) : (uint)0; }
  public int NMKAIHMOFNALength { get { int o = __offset(16); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetNMKAIHMOFNABytes() { return __vector_as_arraysegment(16); }

  public static Offset<EDGCKDLNLNN> CreateEDGCKDLNLNN(FlatBufferBuilder builder,
      uint BBPHAPFBFHK = 0,
      uint EOHDEKFEONI = 0,
      VectorOffset PLPNKMFFPLEOffset = default(VectorOffset),
      uint LPJPOOHJKAE = 0,
      uint PAEGHLMNPNO = 0,
      uint OPOLOJINLPI = 0,
      VectorOffset NMKAIHMOFNAOffset = default(VectorOffset)) {
    builder.StartObject(7);
    EDGCKDLNLNN.AddNMKAIHMOFNA(builder, NMKAIHMOFNAOffset);
    EDGCKDLNLNN.AddOPOLOJINLPI(builder, OPOLOJINLPI);
    EDGCKDLNLNN.AddPAEGHLMNPNO(builder, PAEGHLMNPNO);
    EDGCKDLNLNN.AddLPJPOOHJKAE(builder, LPJPOOHJKAE);
    EDGCKDLNLNN.AddPLPNKMFFPLE(builder, PLPNKMFFPLEOffset);
    EDGCKDLNLNN.AddEOHDEKFEONI(builder, EOHDEKFEONI);
    EDGCKDLNLNN.AddBBPHAPFBFHK(builder, BBPHAPFBFHK);
    return EDGCKDLNLNN.EndEDGCKDLNLNN(builder);
  }

  public static void StartEDGCKDLNLNN(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddBBPHAPFBFHK(FlatBufferBuilder builder, uint BBPHAPFBFHK) { builder.AddUint(0, BBPHAPFBFHK, 0); }
  public static void AddEOHDEKFEONI(FlatBufferBuilder builder, uint EOHDEKFEONI) { builder.AddUint(1, EOHDEKFEONI, 0); }
  public static void AddPLPNKMFFPLE(FlatBufferBuilder builder, VectorOffset PLPNKMFFPLEOffset) { builder.AddOffset(2, PLPNKMFFPLEOffset.Value, 0); }
  public static VectorOffset CreatePLPNKMFFPLEVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static void StartPLPNKMFFPLEVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddLPJPOOHJKAE(FlatBufferBuilder builder, uint LPJPOOHJKAE) { builder.AddUint(3, LPJPOOHJKAE, 0); }
  public static void AddPAEGHLMNPNO(FlatBufferBuilder builder, uint PAEGHLMNPNO) { builder.AddUint(4, PAEGHLMNPNO, 0); }
  public static void AddOPOLOJINLPI(FlatBufferBuilder builder, uint OPOLOJINLPI) { builder.AddUint(5, OPOLOJINLPI, 0); }
  public static void AddNMKAIHMOFNA(FlatBufferBuilder builder, VectorOffset NMKAIHMOFNAOffset) { builder.AddOffset(6, NMKAIHMOFNAOffset.Value, 0); }
  public static VectorOffset CreateNMKAIHMOFNAVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static void StartNMKAIHMOFNAVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<EDGCKDLNLNN> EndEDGCKDLNLNN(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<EDGCKDLNLNN>(o);
  }
};

