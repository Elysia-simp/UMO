// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class PKLIOFHMFFC : Table {
  public static PKLIOFHMFFC GetRootAsPKLIOFHMFFC(ByteBuffer _bb) { return GetRootAsPKLIOFHMFFC(_bb, new PKLIOFHMFFC()); }
  public static PKLIOFHMFFC GetRootAsPKLIOFHMFFC(ByteBuffer _bb, PKLIOFHMFFC obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public PKLIOFHMFFC __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public EFBMIPDEIIB GetNEKBFHJGJLL(int j) { return GetNEKBFHJGJLL(new EFBMIPDEIIB(), j); }
  public EFBMIPDEIIB GetNEKBFHJGJLL(EFBMIPDEIIB obj, int j) { int o = __offset(4); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int NEKBFHJGJLLLength { get { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; } }
  public uint GetEOPAINGDDGD(int j) { int o = __offset(6); return o != 0 ? bb.GetUint(__vector(o) + j * 4) : (uint)0; }
  public int EOPAINGDDGDLength { get { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetEOPAINGDDGDBytes() { return __vector_as_arraysegment(6); }

  public static Offset<PKLIOFHMFFC> CreatePKLIOFHMFFC(FlatBufferBuilder builder,
      VectorOffset NEKBFHJGJLLOffset = default(VectorOffset),
      VectorOffset EOPAINGDDGDOffset = default(VectorOffset)) {
    builder.StartObject(2);
    PKLIOFHMFFC.AddEOPAINGDDGD(builder, EOPAINGDDGDOffset);
    PKLIOFHMFFC.AddNEKBFHJGJLL(builder, NEKBFHJGJLLOffset);
    return PKLIOFHMFFC.EndPKLIOFHMFFC(builder);
  }

  public static void StartPKLIOFHMFFC(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddNEKBFHJGJLL(FlatBufferBuilder builder, VectorOffset NEKBFHJGJLLOffset) { builder.AddOffset(0, NEKBFHJGJLLOffset.Value, 0); }
  public static VectorOffset CreateNEKBFHJGJLLVector(FlatBufferBuilder builder, Offset<EFBMIPDEIIB>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartNEKBFHJGJLLVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddEOPAINGDDGD(FlatBufferBuilder builder, VectorOffset EOPAINGDDGDOffset) { builder.AddOffset(1, EOPAINGDDGDOffset.Value, 0); }
  public static VectorOffset CreateEOPAINGDDGDVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static void StartEOPAINGDDGDVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<PKLIOFHMFFC> EndPKLIOFHMFFC(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PKLIOFHMFFC>(o);
  }
};

