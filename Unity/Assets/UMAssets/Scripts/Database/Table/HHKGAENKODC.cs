// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class HHKGAENKODC : Table {
  public static HHKGAENKODC GetRootAsHHKGAENKODC(ByteBuffer _bb) { return GetRootAsHHKGAENKODC(_bb, new HHKGAENKODC()); }
  public static HHKGAENKODC GetRootAsHHKGAENKODC(ByteBuffer _bb, HHKGAENKODC obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public HHKGAENKODC __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public uint GetEJBHJLJKIBI(int j) { int o = __offset(4); return o != 0 ? bb.GetUint(__vector(o) + j * 4) : (uint)0; }
  public int EJBHJLJKIBILength { get { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetEJBHJLJKIBIBytes() { return __vector_as_arraysegment(4); }
  public uint GetFANEHEDBCBF(int j) { int o = __offset(6); return o != 0 ? bb.GetUint(__vector(o) + j * 4) : (uint)0; }
  public int FANEHEDBCBFLength { get { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetFANEHEDBCBFBytes() { return __vector_as_arraysegment(6); }
  public int GetIHCDJMMMHDL(int j) { int o = __offset(8); return o != 0 ? bb.GetInt(__vector(o) + j * 4) : (int)0; }
  public int IHCDJMMMHDLLength { get { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetIHCDJMMMHDLBytes() { return __vector_as_arraysegment(8); }
  public uint GetAEAHJAHOBMM(int j) { int o = __offset(10); return o != 0 ? bb.GetUint(__vector(o) + j * 4) : (uint)0; }
  public int AEAHJAHOBMMLength { get { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetAEAHJAHOBMMBytes() { return __vector_as_arraysegment(10); }
  public uint GetFGOPOABBIPB(int j) { int o = __offset(12); return o != 0 ? bb.GetUint(__vector(o) + j * 4) : (uint)0; }
  public int FGOPOABBIPBLength { get { int o = __offset(12); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetFGOPOABBIPBBytes() { return __vector_as_arraysegment(12); }
  public int GetMMPGEHLNGBE(int j) { int o = __offset(14); return o != 0 ? bb.GetInt(__vector(o) + j * 4) : (int)0; }
  public int MMPGEHLNGBELength { get { int o = __offset(14); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetMMPGEHLNGBEBytes() { return __vector_as_arraysegment(14); }

  public static Offset<HHKGAENKODC> CreateHHKGAENKODC(FlatBufferBuilder builder,
      VectorOffset EJBHJLJKIBIOffset = default(VectorOffset),
      VectorOffset FANEHEDBCBFOffset = default(VectorOffset),
      VectorOffset IHCDJMMMHDLOffset = default(VectorOffset),
      VectorOffset AEAHJAHOBMMOffset = default(VectorOffset),
      VectorOffset FGOPOABBIPBOffset = default(VectorOffset),
      VectorOffset MMPGEHLNGBEOffset = default(VectorOffset)) {
    builder.StartObject(6);
    HHKGAENKODC.AddMMPGEHLNGBE(builder, MMPGEHLNGBEOffset);
    HHKGAENKODC.AddFGOPOABBIPB(builder, FGOPOABBIPBOffset);
    HHKGAENKODC.AddAEAHJAHOBMM(builder, AEAHJAHOBMMOffset);
    HHKGAENKODC.AddIHCDJMMMHDL(builder, IHCDJMMMHDLOffset);
    HHKGAENKODC.AddFANEHEDBCBF(builder, FANEHEDBCBFOffset);
    HHKGAENKODC.AddEJBHJLJKIBI(builder, EJBHJLJKIBIOffset);
    return HHKGAENKODC.EndHHKGAENKODC(builder);
  }

  public static void StartHHKGAENKODC(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddEJBHJLJKIBI(FlatBufferBuilder builder, VectorOffset EJBHJLJKIBIOffset) { builder.AddOffset(0, EJBHJLJKIBIOffset.Value, 0); }
  public static VectorOffset CreateEJBHJLJKIBIVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static void StartEJBHJLJKIBIVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFANEHEDBCBF(FlatBufferBuilder builder, VectorOffset FANEHEDBCBFOffset) { builder.AddOffset(1, FANEHEDBCBFOffset.Value, 0); }
  public static VectorOffset CreateFANEHEDBCBFVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static void StartFANEHEDBCBFVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddIHCDJMMMHDL(FlatBufferBuilder builder, VectorOffset IHCDJMMMHDLOffset) { builder.AddOffset(2, IHCDJMMMHDLOffset.Value, 0); }
  public static VectorOffset CreateIHCDJMMMHDLVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartIHCDJMMMHDLVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddAEAHJAHOBMM(FlatBufferBuilder builder, VectorOffset AEAHJAHOBMMOffset) { builder.AddOffset(3, AEAHJAHOBMMOffset.Value, 0); }
  public static VectorOffset CreateAEAHJAHOBMMVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static void StartAEAHJAHOBMMVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFGOPOABBIPB(FlatBufferBuilder builder, VectorOffset FGOPOABBIPBOffset) { builder.AddOffset(4, FGOPOABBIPBOffset.Value, 0); }
  public static VectorOffset CreateFGOPOABBIPBVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static void StartFGOPOABBIPBVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMMPGEHLNGBE(FlatBufferBuilder builder, VectorOffset MMPGEHLNGBEOffset) { builder.AddOffset(5, MMPGEHLNGBEOffset.Value, 0); }
  public static VectorOffset CreateMMPGEHLNGBEVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartMMPGEHLNGBEVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<HHKGAENKODC> EndHHKGAENKODC(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<HHKGAENKODC>(o);
  }
};

