// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class FGEACEDNLAC : Table {
  public static FGEACEDNLAC GetRootAsFGEACEDNLAC(ByteBuffer _bb) { return GetRootAsFGEACEDNLAC(_bb, new FGEACEDNLAC()); }
  public static FGEACEDNLAC GetRootAsFGEACEDNLAC(ByteBuffer _bb, FGEACEDNLAC obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public FGEACEDNLAC __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int CFLMCGOJJJD { get { int o = __offset(4); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int CPICBLIGEPH { get { int o = __offset(6); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int BKEMOEAJMHK { get { int o = __offset(8); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int MOMCBJDJDIA { get { int o = __offset(10); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }

  public static Offset<FGEACEDNLAC> CreateFGEACEDNLAC(FlatBufferBuilder builder,
      int CFLMCGOJJJD = 0,
      int CPICBLIGEPH = 0,
      int BKEMOEAJMHK = 0,
      int MOMCBJDJDIA = 0) {
    builder.StartObject(4);
    FGEACEDNLAC.AddMOMCBJDJDIA(builder, MOMCBJDJDIA);
    FGEACEDNLAC.AddBKEMOEAJMHK(builder, BKEMOEAJMHK);
    FGEACEDNLAC.AddCPICBLIGEPH(builder, CPICBLIGEPH);
    FGEACEDNLAC.AddCFLMCGOJJJD(builder, CFLMCGOJJJD);
    return FGEACEDNLAC.EndFGEACEDNLAC(builder);
  }

  public static void StartFGEACEDNLAC(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddCFLMCGOJJJD(FlatBufferBuilder builder, int CFLMCGOJJJD) { builder.AddInt(0, CFLMCGOJJJD, 0); }
  public static void AddCPICBLIGEPH(FlatBufferBuilder builder, int CPICBLIGEPH) { builder.AddInt(1, CPICBLIGEPH, 0); }
  public static void AddBKEMOEAJMHK(FlatBufferBuilder builder, int BKEMOEAJMHK) { builder.AddInt(2, BKEMOEAJMHK, 0); }
  public static void AddMOMCBJDJDIA(FlatBufferBuilder builder, int MOMCBJDJDIA) { builder.AddInt(3, MOMCBJDJDIA, 0); }
  public static Offset<FGEACEDNLAC> EndFGEACEDNLAC(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<FGEACEDNLAC>(o);
  }
};

