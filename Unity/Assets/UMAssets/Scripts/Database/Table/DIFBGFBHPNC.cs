// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class DIFBGFBHPNC : Table {
  public static DIFBGFBHPNC GetRootAsDIFBGFBHPNC(ByteBuffer _bb) { return GetRootAsDIFBGFBHPNC(_bb, new DIFBGFBHPNC()); }
  public static DIFBGFBHPNC GetRootAsDIFBGFBHPNC(ByteBuffer _bb, DIFBGFBHPNC obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public DIFBGFBHPNC __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public string DCEDMFDNAKH { get { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetDCEDMFDNAKHBytes() { return __vector_as_arraysegment(4); }
  public uint FKGLOPMFMCP { get { int o = __offset(6); return o != 0 ? bb.GetUint(o + bb_pos) : (uint)0; } }
  public uint IAPOHBCMPPB { get { int o = __offset(8); return o != 0 ? bb.GetUint(o + bb_pos) : (uint)0; } }

  public static Offset<DIFBGFBHPNC> CreateDIFBGFBHPNC(FlatBufferBuilder builder,
      StringOffset DCEDMFDNAKHOffset = default(StringOffset),
      uint FKGLOPMFMCP = 0,
      uint IAPOHBCMPPB = 0) {
    builder.StartObject(3);
    DIFBGFBHPNC.AddIAPOHBCMPPB(builder, IAPOHBCMPPB);
    DIFBGFBHPNC.AddFKGLOPMFMCP(builder, FKGLOPMFMCP);
    DIFBGFBHPNC.AddDCEDMFDNAKH(builder, DCEDMFDNAKHOffset);
    return DIFBGFBHPNC.EndDIFBGFBHPNC(builder);
  }

  public static void StartDIFBGFBHPNC(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddDCEDMFDNAKH(FlatBufferBuilder builder, StringOffset DCEDMFDNAKHOffset) { builder.AddOffset(0, DCEDMFDNAKHOffset.Value, 0); }
  public static void AddFKGLOPMFMCP(FlatBufferBuilder builder, uint FKGLOPMFMCP) { builder.AddUint(1, FKGLOPMFMCP, 0); }
  public static void AddIAPOHBCMPPB(FlatBufferBuilder builder, uint IAPOHBCMPPB) { builder.AddUint(2, IAPOHBCMPPB, 0); }
  public static Offset<DIFBGFBHPNC> EndDIFBGFBHPNC(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<DIFBGFBHPNC>(o);
  }
};

