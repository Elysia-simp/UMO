// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class MAKNLEOLNKN : Table {
  public static MAKNLEOLNKN GetRootAsMAKNLEOLNKN(ByteBuffer _bb) { return GetRootAsMAKNLEOLNKN(_bb, new MAKNLEOLNKN()); }
  public static MAKNLEOLNKN GetRootAsMAKNLEOLNKN(ByteBuffer _bb, MAKNLEOLNKN obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public MAKNLEOLNKN __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int BBPHAPFBFHK { get { int o = __offset(4); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int GEAIPAEKLNF { get { int o = __offset(6); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int JGILGOILJNK { get { int o = __offset(8); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }

  public static Offset<MAKNLEOLNKN> CreateMAKNLEOLNKN(FlatBufferBuilder builder,
      int BBPHAPFBFHK = 0,
      int GEAIPAEKLNF = 0,
      int JGILGOILJNK = 0) {
    builder.StartObject(3);
    MAKNLEOLNKN.AddJGILGOILJNK(builder, JGILGOILJNK);
    MAKNLEOLNKN.AddGEAIPAEKLNF(builder, GEAIPAEKLNF);
    MAKNLEOLNKN.AddBBPHAPFBFHK(builder, BBPHAPFBFHK);
    return MAKNLEOLNKN.EndMAKNLEOLNKN(builder);
  }

  public static void StartMAKNLEOLNKN(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddBBPHAPFBFHK(FlatBufferBuilder builder, int BBPHAPFBFHK) { builder.AddInt(0, BBPHAPFBFHK, 0); }
  public static void AddGEAIPAEKLNF(FlatBufferBuilder builder, int GEAIPAEKLNF) { builder.AddInt(1, GEAIPAEKLNF, 0); }
  public static void AddJGILGOILJNK(FlatBufferBuilder builder, int JGILGOILJNK) { builder.AddInt(2, JGILGOILJNK, 0); }
  public static Offset<MAKNLEOLNKN> EndMAKNLEOLNKN(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<MAKNLEOLNKN>(o);
  }
};

