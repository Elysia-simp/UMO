// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class EEBLKICOJPH : Table {
  public static EEBLKICOJPH GetRootAsEEBLKICOJPH(ByteBuffer _bb) { return GetRootAsEEBLKICOJPH(_bb, new EEBLKICOJPH()); }
  public static EEBLKICOJPH GetRootAsEEBLKICOJPH(ByteBuffer _bb, EEBLKICOJPH obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public EEBLKICOJPH __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public EECGFGECDBJ GetOFNGBGFMDDO(int j) { return GetOFNGBGFMDDO(new EECGFGECDBJ(), j); }
  public EECGFGECDBJ GetOFNGBGFMDDO(EECGFGECDBJ obj, int j) { int o = __offset(4); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int OFNGBGFMDDOLength { get { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; } }
  public NACHIDBHKDO GetFOBKBJEHOFG(int j) { return GetFOBKBJEHOFG(new NACHIDBHKDO(), j); }
  public NACHIDBHKDO GetFOBKBJEHOFG(NACHIDBHKDO obj, int j) { int o = __offset(6); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int FOBKBJEHOFGLength { get { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; } }
  public BPMNLCHMMIE GetILBKJACHOHM(int j) { return GetILBKJACHOHM(new BPMNLCHMMIE(), j); }
  public BPMNLCHMMIE GetILBKJACHOHM(BPMNLCHMMIE obj, int j) { int o = __offset(8); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int ILBKJACHOHMLength { get { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; } }

  public static Offset<EEBLKICOJPH> CreateEEBLKICOJPH(FlatBufferBuilder builder,
      VectorOffset OFNGBGFMDDOOffset = default(VectorOffset),
      VectorOffset FOBKBJEHOFGOffset = default(VectorOffset),
      VectorOffset ILBKJACHOHMOffset = default(VectorOffset)) {
    builder.StartObject(3);
    EEBLKICOJPH.AddILBKJACHOHM(builder, ILBKJACHOHMOffset);
    EEBLKICOJPH.AddFOBKBJEHOFG(builder, FOBKBJEHOFGOffset);
    EEBLKICOJPH.AddOFNGBGFMDDO(builder, OFNGBGFMDDOOffset);
    return EEBLKICOJPH.EndEEBLKICOJPH(builder);
  }

  public static void StartEEBLKICOJPH(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddOFNGBGFMDDO(FlatBufferBuilder builder, VectorOffset OFNGBGFMDDOOffset) { builder.AddOffset(0, OFNGBGFMDDOOffset.Value, 0); }
  public static VectorOffset CreateOFNGBGFMDDOVector(FlatBufferBuilder builder, Offset<EECGFGECDBJ>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartOFNGBGFMDDOVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFOBKBJEHOFG(FlatBufferBuilder builder, VectorOffset FOBKBJEHOFGOffset) { builder.AddOffset(1, FOBKBJEHOFGOffset.Value, 0); }
  public static VectorOffset CreateFOBKBJEHOFGVector(FlatBufferBuilder builder, Offset<NACHIDBHKDO>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartFOBKBJEHOFGVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddILBKJACHOHM(FlatBufferBuilder builder, VectorOffset ILBKJACHOHMOffset) { builder.AddOffset(2, ILBKJACHOHMOffset.Value, 0); }
  public static VectorOffset CreateILBKJACHOHMVector(FlatBufferBuilder builder, Offset<BPMNLCHMMIE>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartILBKJACHOHMVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<EEBLKICOJPH> EndEEBLKICOJPH(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<EEBLKICOJPH>(o);
  }
};

