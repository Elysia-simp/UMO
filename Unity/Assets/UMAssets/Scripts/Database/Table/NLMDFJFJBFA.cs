// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class NLMDFJFJBFA : Table {
  public static NLMDFJFJBFA GetRootAsNLMDFJFJBFA(ByteBuffer _bb) { return GetRootAsNLMDFJFJBFA(_bb, new NLMDFJFJBFA()); }
  public static NLMDFJFJBFA GetRootAsNLMDFJFJBFA(ByteBuffer _bb, NLMDFJFJBFA obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public NLMDFJFJBFA __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public uint BBPHAPFBFHK { get { int o = __offset(4); return o != 0 ? bb.GetUint(o + bb_pos) : (uint)0; } }
  public uint LPJPOOHJKAE { get { int o = __offset(6); return o != 0 ? bb.GetUint(o + bb_pos) : (uint)0; } }
  public uint MBBJMJAAODG { get { int o = __offset(8); return o != 0 ? bb.GetUint(o + bb_pos) : (uint)0; } }

  public static Offset<NLMDFJFJBFA> CreateNLMDFJFJBFA(FlatBufferBuilder builder,
      uint BBPHAPFBFHK = 0,
      uint LPJPOOHJKAE = 0,
      uint MBBJMJAAODG = 0) {
    builder.StartObject(3);
    NLMDFJFJBFA.AddMBBJMJAAODG(builder, MBBJMJAAODG);
    NLMDFJFJBFA.AddLPJPOOHJKAE(builder, LPJPOOHJKAE);
    NLMDFJFJBFA.AddBBPHAPFBFHK(builder, BBPHAPFBFHK);
    return NLMDFJFJBFA.EndNLMDFJFJBFA(builder);
  }

  public static void StartNLMDFJFJBFA(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddBBPHAPFBFHK(FlatBufferBuilder builder, uint BBPHAPFBFHK) { builder.AddUint(0, BBPHAPFBFHK, 0); }
  public static void AddLPJPOOHJKAE(FlatBufferBuilder builder, uint LPJPOOHJKAE) { builder.AddUint(1, LPJPOOHJKAE, 0); }
  public static void AddMBBJMJAAODG(FlatBufferBuilder builder, uint MBBJMJAAODG) { builder.AddUint(2, MBBJMJAAODG, 0); }
  public static Offset<NLMDFJFJBFA> EndNLMDFJFJBFA(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<NLMDFJFJBFA>(o);
  }
};

