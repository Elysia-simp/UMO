// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class KBKAEPDDIME : Table {
  public static KBKAEPDDIME GetRootAsKBKAEPDDIME(ByteBuffer _bb) { return GetRootAsKBKAEPDDIME(_bb, new KBKAEPDDIME()); }
  public static KBKAEPDDIME GetRootAsKBKAEPDDIME(ByteBuffer _bb, KBKAEPDDIME obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public KBKAEPDDIME __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int NMOFFGFGFKA { get { int o = __offset(4); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int GetBMICKLAGCCD(int j) { int o = __offset(6); return o != 0 ? bb.GetInt(__vector(o) + j * 4) : (int)0; }
  public int BMICKLAGCCDLength { get { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetBMICKLAGCCDBytes() { return __vector_as_arraysegment(6); }

  public static Offset<KBKAEPDDIME> CreateKBKAEPDDIME(FlatBufferBuilder builder,
      int NMOFFGFGFKA = 0,
      VectorOffset BMICKLAGCCDOffset = default(VectorOffset)) {
    builder.StartObject(2);
    KBKAEPDDIME.AddBMICKLAGCCD(builder, BMICKLAGCCDOffset);
    KBKAEPDDIME.AddNMOFFGFGFKA(builder, NMOFFGFGFKA);
    return KBKAEPDDIME.EndKBKAEPDDIME(builder);
  }

  public static void StartKBKAEPDDIME(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddNMOFFGFGFKA(FlatBufferBuilder builder, int NMOFFGFGFKA) { builder.AddInt(0, NMOFFGFGFKA, 0); }
  public static void AddBMICKLAGCCD(FlatBufferBuilder builder, VectorOffset BMICKLAGCCDOffset) { builder.AddOffset(1, BMICKLAGCCDOffset.Value, 0); }
  public static VectorOffset CreateBMICKLAGCCDVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartBMICKLAGCCDVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<KBKAEPDDIME> EndKBKAEPDDIME(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<KBKAEPDDIME>(o);
  }
};

