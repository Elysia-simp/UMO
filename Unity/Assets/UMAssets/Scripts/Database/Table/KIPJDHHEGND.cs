// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class KIPJDHHEGND : Table {
  public static KIPJDHHEGND GetRootAsKIPJDHHEGND(ByteBuffer _bb) { return GetRootAsKIPJDHHEGND(_bb, new KIPJDHHEGND()); }
  public static KIPJDHHEGND GetRootAsKIPJDHHEGND(ByteBuffer _bb, KIPJDHHEGND obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public KIPJDHHEGND __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public GGALCNFLIBP GetNFAJGFHLKGI(int j) { return GetNFAJGFHLKGI(new GGALCNFLIBP(), j); }
  public GGALCNFLIBP GetNFAJGFHLKGI(GGALCNFLIBP obj, int j) { int o = __offset(4); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int NFAJGFHLKGILength { get { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; } }
  public JIHBJPCAEMH GetONGHLNCPCMI(int j) { return GetONGHLNCPCMI(new JIHBJPCAEMH(), j); }
  public JIHBJPCAEMH GetONGHLNCPCMI(JIHBJPCAEMH obj, int j) { int o = __offset(6); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int ONGHLNCPCMILength { get { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; } }
  public JEFGONAHEGI GetOGCIHPPJHMG(int j) { return GetOGCIHPPJHMG(new JEFGONAHEGI(), j); }
  public JEFGONAHEGI GetOGCIHPPJHMG(JEFGONAHEGI obj, int j) { int o = __offset(8); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int OGCIHPPJHMGLength { get { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; } }

  public static Offset<KIPJDHHEGND> CreateKIPJDHHEGND(FlatBufferBuilder builder,
      VectorOffset NFAJGFHLKGIOffset = default(VectorOffset),
      VectorOffset ONGHLNCPCMIOffset = default(VectorOffset),
      VectorOffset OGCIHPPJHMGOffset = default(VectorOffset)) {
    builder.StartObject(3);
    KIPJDHHEGND.AddOGCIHPPJHMG(builder, OGCIHPPJHMGOffset);
    KIPJDHHEGND.AddONGHLNCPCMI(builder, ONGHLNCPCMIOffset);
    KIPJDHHEGND.AddNFAJGFHLKGI(builder, NFAJGFHLKGIOffset);
    return KIPJDHHEGND.EndKIPJDHHEGND(builder);
  }

  public static void StartKIPJDHHEGND(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddNFAJGFHLKGI(FlatBufferBuilder builder, VectorOffset NFAJGFHLKGIOffset) { builder.AddOffset(0, NFAJGFHLKGIOffset.Value, 0); }
  public static VectorOffset CreateNFAJGFHLKGIVector(FlatBufferBuilder builder, Offset<GGALCNFLIBP>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartNFAJGFHLKGIVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddONGHLNCPCMI(FlatBufferBuilder builder, VectorOffset ONGHLNCPCMIOffset) { builder.AddOffset(1, ONGHLNCPCMIOffset.Value, 0); }
  public static VectorOffset CreateONGHLNCPCMIVector(FlatBufferBuilder builder, Offset<JIHBJPCAEMH>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartONGHLNCPCMIVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddOGCIHPPJHMG(FlatBufferBuilder builder, VectorOffset OGCIHPPJHMGOffset) { builder.AddOffset(2, OGCIHPPJHMGOffset.Value, 0); }
  public static VectorOffset CreateOGCIHPPJHMGVector(FlatBufferBuilder builder, Offset<JEFGONAHEGI>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartOGCIHPPJHMGVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<KIPJDHHEGND> EndKIPJDHHEGND(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<KIPJDHHEGND>(o);
  }
};

