// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class PKAMNOECHOM : Table {
  public static PKAMNOECHOM GetRootAsPKAMNOECHOM(ByteBuffer _bb) { return GetRootAsPKAMNOECHOM(_bb, new PKAMNOECHOM()); }
  public static PKAMNOECHOM GetRootAsPKAMNOECHOM(ByteBuffer _bb, PKAMNOECHOM obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public PKAMNOECHOM __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public uint IPCBHGGLEJA { get { int o = __offset(4); return o != 0 ? bb.GetUint(o + bb_pos) : (uint)0; } }
  public uint NABLNBMACHL { get { int o = __offset(6); return o != 0 ? bb.GetUint(o + bb_pos) : (uint)0; } }
  public uint OPDBBGBMPMM { get { int o = __offset(8); return o != 0 ? bb.GetUint(o + bb_pos) : (uint)0; } }
  public uint LMKLPPINLOK { get { int o = __offset(10); return o != 0 ? bb.GetUint(o + bb_pos) : (uint)0; } }
  public uint GetLGJDLFJCCLK(int j) { int o = __offset(12); return o != 0 ? bb.GetUint(__vector(o) + j * 4) : (uint)0; }
  public int LGJDLFJCCLKLength { get { int o = __offset(12); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetLGJDLFJCCLKBytes() { return __vector_as_arraysegment(12); }
  public uint LIGDKLEFBNM { get { int o = __offset(14); return o != 0 ? bb.GetUint(o + bb_pos) : (uint)0; } }
  public uint GetBMICKLAGCCD(int j) { int o = __offset(16); return o != 0 ? bb.GetUint(__vector(o) + j * 4) : (uint)0; }
  public int BMICKLAGCCDLength { get { int o = __offset(16); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetBMICKLAGCCDBytes() { return __vector_as_arraysegment(16); }
  public uint FLNOLLMJOKE { get { int o = __offset(18); return o != 0 ? bb.GetUint(o + bb_pos) : (uint)0; } }

  public static Offset<PKAMNOECHOM> CreatePKAMNOECHOM(FlatBufferBuilder builder,
      uint IPCBHGGLEJA = 0,
      uint NABLNBMACHL = 0,
      uint OPDBBGBMPMM = 0,
      uint LMKLPPINLOK = 0,
      VectorOffset LGJDLFJCCLKOffset = default(VectorOffset),
      uint LIGDKLEFBNM = 0,
      VectorOffset BMICKLAGCCDOffset = default(VectorOffset),
      uint FLNOLLMJOKE = 0) {
    builder.StartObject(8);
    PKAMNOECHOM.AddFLNOLLMJOKE(builder, FLNOLLMJOKE);
    PKAMNOECHOM.AddBMICKLAGCCD(builder, BMICKLAGCCDOffset);
    PKAMNOECHOM.AddLIGDKLEFBNM(builder, LIGDKLEFBNM);
    PKAMNOECHOM.AddLGJDLFJCCLK(builder, LGJDLFJCCLKOffset);
    PKAMNOECHOM.AddLMKLPPINLOK(builder, LMKLPPINLOK);
    PKAMNOECHOM.AddOPDBBGBMPMM(builder, OPDBBGBMPMM);
    PKAMNOECHOM.AddNABLNBMACHL(builder, NABLNBMACHL);
    PKAMNOECHOM.AddIPCBHGGLEJA(builder, IPCBHGGLEJA);
    return PKAMNOECHOM.EndPKAMNOECHOM(builder);
  }

  public static void StartPKAMNOECHOM(FlatBufferBuilder builder) { builder.StartObject(8); }
  public static void AddIPCBHGGLEJA(FlatBufferBuilder builder, uint IPCBHGGLEJA) { builder.AddUint(0, IPCBHGGLEJA, 0); }
  public static void AddNABLNBMACHL(FlatBufferBuilder builder, uint NABLNBMACHL) { builder.AddUint(1, NABLNBMACHL, 0); }
  public static void AddOPDBBGBMPMM(FlatBufferBuilder builder, uint OPDBBGBMPMM) { builder.AddUint(2, OPDBBGBMPMM, 0); }
  public static void AddLMKLPPINLOK(FlatBufferBuilder builder, uint LMKLPPINLOK) { builder.AddUint(3, LMKLPPINLOK, 0); }
  public static void AddLGJDLFJCCLK(FlatBufferBuilder builder, VectorOffset LGJDLFJCCLKOffset) { builder.AddOffset(4, LGJDLFJCCLKOffset.Value, 0); }
  public static VectorOffset CreateLGJDLFJCCLKVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static void StartLGJDLFJCCLKVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddLIGDKLEFBNM(FlatBufferBuilder builder, uint LIGDKLEFBNM) { builder.AddUint(5, LIGDKLEFBNM, 0); }
  public static void AddBMICKLAGCCD(FlatBufferBuilder builder, VectorOffset BMICKLAGCCDOffset) { builder.AddOffset(6, BMICKLAGCCDOffset.Value, 0); }
  public static VectorOffset CreateBMICKLAGCCDVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static void StartBMICKLAGCCDVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFLNOLLMJOKE(FlatBufferBuilder builder, uint FLNOLLMJOKE) { builder.AddUint(7, FLNOLLMJOKE, 0); }
  public static Offset<PKAMNOECHOM> EndPKAMNOECHOM(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PKAMNOECHOM>(o);
  }
};

