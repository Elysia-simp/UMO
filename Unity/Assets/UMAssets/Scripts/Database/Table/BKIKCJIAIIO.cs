// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class BKIKCJIAIIO : Table {
  public static BKIKCJIAIIO GetRootAsBKIKCJIAIIO(ByteBuffer _bb) { return GetRootAsBKIKCJIAIIO(_bb, new BKIKCJIAIIO()); }
  public static BKIKCJIAIIO GetRootAsBKIKCJIAIIO(ByteBuffer _bb, BKIKCJIAIIO obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public BKIKCJIAIIO __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int BBPHAPFBFHK { get { int o = __offset(4); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int FNMKCLELMHN { get { int o = __offset(6); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int ENFMOLLLMCK { get { int o = __offset(8); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int KBPIOBMFPDN { get { int o = __offset(10); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int NCIKNCJLFBI { get { int o = __offset(12); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int GetCHGIONDFIKP(int j) { int o = __offset(14); return o != 0 ? bb.GetInt(__vector(o) + j * 4) : (int)0; }
  public int CHGIONDFIKPLength { get { int o = __offset(14); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetCHGIONDFIKPBytes() { return __vector_as_arraysegment(14); }

  public static Offset<BKIKCJIAIIO> CreateBKIKCJIAIIO(FlatBufferBuilder builder,
      int BBPHAPFBFHK = 0,
      int FNMKCLELMHN = 0,
      int ENFMOLLLMCK = 0,
      int KBPIOBMFPDN = 0,
      int NCIKNCJLFBI = 0,
      VectorOffset CHGIONDFIKPOffset = default(VectorOffset)) {
    builder.StartObject(6);
    BKIKCJIAIIO.AddCHGIONDFIKP(builder, CHGIONDFIKPOffset);
    BKIKCJIAIIO.AddNCIKNCJLFBI(builder, NCIKNCJLFBI);
    BKIKCJIAIIO.AddKBPIOBMFPDN(builder, KBPIOBMFPDN);
    BKIKCJIAIIO.AddENFMOLLLMCK(builder, ENFMOLLLMCK);
    BKIKCJIAIIO.AddFNMKCLELMHN(builder, FNMKCLELMHN);
    BKIKCJIAIIO.AddBBPHAPFBFHK(builder, BBPHAPFBFHK);
    return BKIKCJIAIIO.EndBKIKCJIAIIO(builder);
  }

  public static void StartBKIKCJIAIIO(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddBBPHAPFBFHK(FlatBufferBuilder builder, int BBPHAPFBFHK) { builder.AddInt(0, BBPHAPFBFHK, 0); }
  public static void AddFNMKCLELMHN(FlatBufferBuilder builder, int FNMKCLELMHN) { builder.AddInt(1, FNMKCLELMHN, 0); }
  public static void AddENFMOLLLMCK(FlatBufferBuilder builder, int ENFMOLLLMCK) { builder.AddInt(2, ENFMOLLLMCK, 0); }
  public static void AddKBPIOBMFPDN(FlatBufferBuilder builder, int KBPIOBMFPDN) { builder.AddInt(3, KBPIOBMFPDN, 0); }
  public static void AddNCIKNCJLFBI(FlatBufferBuilder builder, int NCIKNCJLFBI) { builder.AddInt(4, NCIKNCJLFBI, 0); }
  public static void AddCHGIONDFIKP(FlatBufferBuilder builder, VectorOffset CHGIONDFIKPOffset) { builder.AddOffset(5, CHGIONDFIKPOffset.Value, 0); }
  public static VectorOffset CreateCHGIONDFIKPVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartCHGIONDFIKPVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<BKIKCJIAIIO> EndBKIKCJIAIIO(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BKIKCJIAIIO>(o);
  }
};

