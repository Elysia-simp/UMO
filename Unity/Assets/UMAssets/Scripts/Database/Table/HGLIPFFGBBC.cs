// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class HGLIPFFGBBC : Table {
  public static HGLIPFFGBBC GetRootAsHGLIPFFGBBC(ByteBuffer _bb) { return GetRootAsHGLIPFFGBBC(_bb, new HGLIPFFGBBC()); }
  public static HGLIPFFGBBC GetRootAsHGLIPFFGBBC(ByteBuffer _bb, HGLIPFFGBBC obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public HGLIPFFGBBC __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int GetCKBNFBPHJEA(int j) { int o = __offset(4); return o != 0 ? bb.GetInt(__vector(o) + j * 4) : (int)0; }
  public int CKBNFBPHJEALength { get { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetCKBNFBPHJEABytes() { return __vector_as_arraysegment(4); }
  public int GetIKNICGHGHNM(int j) { int o = __offset(6); return o != 0 ? bb.GetInt(__vector(o) + j * 4) : (int)0; }
  public int IKNICGHGHNMLength { get { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetIKNICGHGHNMBytes() { return __vector_as_arraysegment(6); }

  public static Offset<HGLIPFFGBBC> CreateHGLIPFFGBBC(FlatBufferBuilder builder,
      VectorOffset CKBNFBPHJEAOffset = default(VectorOffset),
      VectorOffset IKNICGHGHNMOffset = default(VectorOffset)) {
    builder.StartObject(2);
    HGLIPFFGBBC.AddIKNICGHGHNM(builder, IKNICGHGHNMOffset);
    HGLIPFFGBBC.AddCKBNFBPHJEA(builder, CKBNFBPHJEAOffset);
    return HGLIPFFGBBC.EndHGLIPFFGBBC(builder);
  }

  public static void StartHGLIPFFGBBC(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddCKBNFBPHJEA(FlatBufferBuilder builder, VectorOffset CKBNFBPHJEAOffset) { builder.AddOffset(0, CKBNFBPHJEAOffset.Value, 0); }
  public static VectorOffset CreateCKBNFBPHJEAVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartCKBNFBPHJEAVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddIKNICGHGHNM(FlatBufferBuilder builder, VectorOffset IKNICGHGHNMOffset) { builder.AddOffset(1, IKNICGHGHNMOffset.Value, 0); }
  public static VectorOffset CreateIKNICGHGHNMVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartIKNICGHGHNMVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<HGLIPFFGBBC> EndHGLIPFFGBBC(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<HGLIPFFGBBC>(o);
  }
};

