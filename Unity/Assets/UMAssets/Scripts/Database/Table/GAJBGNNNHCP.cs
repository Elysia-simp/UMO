// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class GAJBGNNNHCP : Table {
  public static GAJBGNNNHCP GetRootAsGAJBGNNNHCP(ByteBuffer _bb) { return GetRootAsGAJBGNNNHCP(_bb, new GAJBGNNNHCP()); }
  public static GAJBGNNNHCP GetRootAsGAJBGNNNHCP(ByteBuffer _bb, GAJBGNNNHCP obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public GAJBGNNNHCP __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int GetPHGKBJDEJKI(int j) { int o = __offset(4); return o != 0 ? bb.GetInt(__vector(o) + j * 4) : (int)0; }
  public int PHGKBJDEJKILength { get { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetPHGKBJDEJKIBytes() { return __vector_as_arraysegment(4); }
  public int GetOOFMHMCDPEM(int j) { int o = __offset(6); return o != 0 ? bb.GetInt(__vector(o) + j * 4) : (int)0; }
  public int OOFMHMCDPEMLength { get { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetOOFMHMCDPEMBytes() { return __vector_as_arraysegment(6); }
  public int GEJGMBBCFEE { get { int o = __offset(8); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }

  public static Offset<GAJBGNNNHCP> CreateGAJBGNNNHCP(FlatBufferBuilder builder,
      VectorOffset PHGKBJDEJKIOffset = default(VectorOffset),
      VectorOffset OOFMHMCDPEMOffset = default(VectorOffset),
      int GEJGMBBCFEE = 0) {
    builder.StartObject(3);
    GAJBGNNNHCP.AddGEJGMBBCFEE(builder, GEJGMBBCFEE);
    GAJBGNNNHCP.AddOOFMHMCDPEM(builder, OOFMHMCDPEMOffset);
    GAJBGNNNHCP.AddPHGKBJDEJKI(builder, PHGKBJDEJKIOffset);
    return GAJBGNNNHCP.EndGAJBGNNNHCP(builder);
  }

  public static void StartGAJBGNNNHCP(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddPHGKBJDEJKI(FlatBufferBuilder builder, VectorOffset PHGKBJDEJKIOffset) { builder.AddOffset(0, PHGKBJDEJKIOffset.Value, 0); }
  public static VectorOffset CreatePHGKBJDEJKIVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartPHGKBJDEJKIVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddOOFMHMCDPEM(FlatBufferBuilder builder, VectorOffset OOFMHMCDPEMOffset) { builder.AddOffset(1, OOFMHMCDPEMOffset.Value, 0); }
  public static VectorOffset CreateOOFMHMCDPEMVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartOOFMHMCDPEMVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddGEJGMBBCFEE(FlatBufferBuilder builder, int GEJGMBBCFEE) { builder.AddInt(2, GEJGMBBCFEE, 0); }
  public static Offset<GAJBGNNNHCP> EndGAJBGNNNHCP(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GAJBGNNNHCP>(o);
  }
};

