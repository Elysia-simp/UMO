// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class EEJBHCCHCGC : Table {
  public static EEJBHCCHCGC GetRootAsEEJBHCCHCGC(ByteBuffer _bb) { return GetRootAsEEJBHCCHCGC(_bb, new EEJBHCCHCGC()); }
  public static EEJBHCCHCGC GetRootAsEEJBHCCHCGC(ByteBuffer _bb, EEJBHCCHCGC obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public EEJBHCCHCGC __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int BBPHAPFBFHK { get { int o = __offset(4); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int GetKAPGFDIPAMK(int j) { int o = __offset(6); return o != 0 ? bb.GetInt(__vector(o) + j * 4) : (int)0; }
  public int KAPGFDIPAMKLength { get { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetKAPGFDIPAMKBytes() { return __vector_as_arraysegment(6); }
  public int GetDIDBHLLFNOH(int j) { int o = __offset(8); return o != 0 ? bb.GetInt(__vector(o) + j * 4) : (int)0; }
  public int DIDBHLLFNOHLength { get { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetDIDBHLLFNOHBytes() { return __vector_as_arraysegment(8); }

  public static Offset<EEJBHCCHCGC> CreateEEJBHCCHCGC(FlatBufferBuilder builder,
      int BBPHAPFBFHK = 0,
      VectorOffset KAPGFDIPAMKOffset = default(VectorOffset),
      VectorOffset DIDBHLLFNOHOffset = default(VectorOffset)) {
    builder.StartObject(3);
    EEJBHCCHCGC.AddDIDBHLLFNOH(builder, DIDBHLLFNOHOffset);
    EEJBHCCHCGC.AddKAPGFDIPAMK(builder, KAPGFDIPAMKOffset);
    EEJBHCCHCGC.AddBBPHAPFBFHK(builder, BBPHAPFBFHK);
    return EEJBHCCHCGC.EndEEJBHCCHCGC(builder);
  }

  public static void StartEEJBHCCHCGC(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddBBPHAPFBFHK(FlatBufferBuilder builder, int BBPHAPFBFHK) { builder.AddInt(0, BBPHAPFBFHK, 0); }
  public static void AddKAPGFDIPAMK(FlatBufferBuilder builder, VectorOffset KAPGFDIPAMKOffset) { builder.AddOffset(1, KAPGFDIPAMKOffset.Value, 0); }
  public static VectorOffset CreateKAPGFDIPAMKVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartKAPGFDIPAMKVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDIDBHLLFNOH(FlatBufferBuilder builder, VectorOffset DIDBHLLFNOHOffset) { builder.AddOffset(2, DIDBHLLFNOHOffset.Value, 0); }
  public static VectorOffset CreateDIDBHLLFNOHVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartDIDBHLLFNOHVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<EEJBHCCHCGC> EndEEJBHCCHCGC(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<EEJBHCCHCGC>(o);
  }
};

