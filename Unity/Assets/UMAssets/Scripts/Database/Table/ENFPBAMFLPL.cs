// automatically generated by the FlatBuffers compiler, do not modify

using System;
using FlatBuffers;

public sealed class ENFPBAMFLPL : Table {
  public static ENFPBAMFLPL GetRootAsENFPBAMFLPL(ByteBuffer _bb) { return GetRootAsENFPBAMFLPL(_bb, new ENFPBAMFLPL()); }
  public static ENFPBAMFLPL GetRootAsENFPBAMFLPL(ByteBuffer _bb, ENFPBAMFLPL obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public ENFPBAMFLPL __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int GetBJOOKJIOGHF(int j) { int o = __offset(4); return o != 0 ? bb.GetInt(__vector(o) + j * 4) : (int)0; }
  public int BJOOKJIOGHFLength { get { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetBJOOKJIOGHFBytes() { return __vector_as_arraysegment(4); }
  public int GetAKKGNHMOBPP(int j) { int o = __offset(6); return o != 0 ? bb.GetInt(__vector(o) + j * 4) : (int)0; }
  public int AKKGNHMOBPPLength { get { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetAKKGNHMOBPPBytes() { return __vector_as_arraysegment(6); }
  public int GetCGKGLCKCAMC(int j) { int o = __offset(8); return o != 0 ? bb.GetInt(__vector(o) + j * 4) : (int)0; }
  public int CGKGLCKCAMCLength { get { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetCGKGLCKCAMCBytes() { return __vector_as_arraysegment(8); }

  public static Offset<ENFPBAMFLPL> CreateENFPBAMFLPL(FlatBufferBuilder builder,
      VectorOffset BJOOKJIOGHFOffset = default(VectorOffset),
      VectorOffset AKKGNHMOBPPOffset = default(VectorOffset),
      VectorOffset CGKGLCKCAMCOffset = default(VectorOffset)) {
    builder.StartObject(3);
    ENFPBAMFLPL.AddCGKGLCKCAMC(builder, CGKGLCKCAMCOffset);
    ENFPBAMFLPL.AddAKKGNHMOBPP(builder, AKKGNHMOBPPOffset);
    ENFPBAMFLPL.AddBJOOKJIOGHF(builder, BJOOKJIOGHFOffset);
    return ENFPBAMFLPL.EndENFPBAMFLPL(builder);
  }

  public static void StartENFPBAMFLPL(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddBJOOKJIOGHF(FlatBufferBuilder builder, VectorOffset BJOOKJIOGHFOffset) { builder.AddOffset(0, BJOOKJIOGHFOffset.Value, 0); }
  public static VectorOffset CreateBJOOKJIOGHFVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartBJOOKJIOGHFVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddAKKGNHMOBPP(FlatBufferBuilder builder, VectorOffset AKKGNHMOBPPOffset) { builder.AddOffset(1, AKKGNHMOBPPOffset.Value, 0); }
  public static VectorOffset CreateAKKGNHMOBPPVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartAKKGNHMOBPPVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddCGKGLCKCAMC(FlatBufferBuilder builder, VectorOffset CGKGLCKCAMCOffset) { builder.AddOffset(2, CGKGLCKCAMCOffset.Value, 0); }
  public static VectorOffset CreateCGKGLCKCAMCVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartCGKGLCKCAMCVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ENFPBAMFLPL> EndENFPBAMFLPL(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ENFPBAMFLPL>(o);
  }
};

